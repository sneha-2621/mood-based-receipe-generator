const board = document.getElementById('game-board');
const movesCounter = document.getElementById('moves');
const message = document.getElementById('message');
const restartBtn = document.getElementById('restart-btn');
const timerDisplay = document.getElementById('timer');

const emojis = ['üçé','üçå','üçá','üçâ','üçí','ü•ù','üçç','üçì']; // 8 pairs = 16 cards

let cardsArray = [];
let flippedCards = [];
let matchedCount = 0;
let moves = 0;
let lockBoard = false;

let timerInterval;
let totalSeconds = 0;

function startTimer() {
  totalSeconds = 0;
  timerDisplay.textContent = '0:00';

  timerInterval = setInterval(() => {
    totalSeconds++;
    const minutes = Math.floor(totalSeconds / 60);
    const seconds = totalSeconds % 60;
    timerDisplay.textContent = ${minutes}:${seconds.toString().padStart(2, '0')};
  }, 1000);
}

function stopTimer() {
  clearInterval(timerInterval);
}

function initGame() {
  // Reset everything
  board.innerHTML = '';
  moves = 0;
  matchedCount = 0;
  movesCounter.textContent = moves;
  message.textContent = '';
  flippedCards = [];
  lockBoard = false;

  stopTimer();
  startTimer();

  // Create pairs and shuffle
  cardsArray = [...emojis, ...emojis];
  shuffle(cardsArray);

  // Create card elements
  cardsArray.forEach((emoji, index) => {
    const card = document.createElement('div');
    card.classList.add('card');
    card.dataset.emoji = emoji;
    card.innerHTML = `
      <div class="card-inner">
        <div class="card-front">${emoji}</div>
        <div class="card-back">‚ùì</div>
      </div>
    `;

    card.addEventListener('click', () => flipCard(card));

    board.appendChild(card);
  });
}

function shuffle(array) {
  for(let i = array.length -1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
}

function flipCard(card) {
  if(lockBoard) return;
  if(card.classList.contains('flipped')) return;

  card.classList.add('flipped');
  flippedCards.push(card);

  if(flippedCards.length === 2) {
    moves++;
    movesCounter.textContent = moves;
    checkMatch();
  }
}

function checkMatch() {
  lockBoard = true;

  const [first, second] = flippedCards;

  if(first.dataset.emoji === second.dataset.emoji) {
    // Match found
    matchedCount += 2;
    flippedCards = [];
    lockBoard = false;

    if(matchedCount === cardsArray.length) {
      message.textContent = üéâ You won in ${moves} moves!;
      stopTimer();
    }
  } else {
    // Not a match, flip back after delay
    setTimeout(() => {
      first.classList.remove('flipped');
      second.classList.remove('flipped');
      flippedCards = [];
      lockBoard = false;
    }, 1000);
  }
}

restartBtn.addEventListener('click', initGame);

// Initialize on page load
initGame();